// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   MyCaseClass.scala

import scala.*;
import scala.collection.Iterator;
import scala.runtime.BoxesRunTime;
import scala.runtime.ScalaRunTime$;

public class MyCaseClass
    implements Product, Serializable
{

    public static Option unapply(MyCaseClass mycaseclass)
    {
        return MyCaseClass$.MODULE$.unapply(mycaseclass);
    }

    public static MyCaseClass apply(String s, String s1)
    {
        return MyCaseClass$.MODULE$.apply(s, s1);
    }

    public static Function1 tupled()
    {
        return MyCaseClass$.MODULE$.tupled();
    }

    public static Function1 curried()
    {
        return MyCaseClass$.MODULE$.curried();
    }

    public String name()
    {
        return name;
    }

    public String value()
    {
        return value;
    }

    public MyCaseClass copy(String name, String value)
    {
        return new MyCaseClass(name, value);
    }

    public String copy$default$1()
    {
        return name();
    }

    public String copy$default$2()
    {
        return value();
    }

    public String productPrefix()
    {
        return "MyCaseClass";
    }

    public int productArity()
    {
        return 2;
    }

    public Object productElement(int x$1)
    {
        int i = x$1;
        i;
        JVM INSTR tableswitch 0 1: default 24
    //                   0 46
    //                   1 39;
           goto _L1 _L2 _L3
_L1:
        throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
_L3:
        value();
          goto _L4
_L2:
        name();
_L4:
        return;
    }

    public Iterator productIterator()
    {
        return ScalaRunTime$.MODULE$.typedProductIterator(this);
    }

    public boolean canEqual(Object x$1)
    {
        return x$1 instanceof MyCaseClass;
    }

    public int hashCode()
    {
        return ScalaRunTime$.MODULE$._hashCode(this);
    }

    public String toString()
    {
        return ScalaRunTime$.MODULE$._toString(this);
    }

    public boolean equals(Object x$1)
    {
        if(this == x$1) goto _L2; else goto _L1
_L1:
        boolean flag;
        Object obj = x$1;
        if(obj instanceof MyCaseClass)
            flag = true;
        else
            flag = false;
        if(!flag) goto _L4; else goto _L3
_L3:
        MyCaseClass mycaseclass;
        String s;
        String s2;
        mycaseclass = (MyCaseClass)x$1;
        s2 = name();
        s2;
        s2;
        s = mycaseclass.name();
        JVM INSTR ifnonnull 55;
           goto _L5 _L6
_L5:
        JVM INSTR pop ;
        if(s == null) goto _L8; else goto _L7
_L6:
        s;
        equals();
        JVM INSTR ifeq 108;
           goto _L8 _L7
_L8:
        String s1;
        String s3 = value();
        s3;
        s3;
        s1 = mycaseclass.value();
        JVM INSTR ifnonnull 87;
           goto _L9 _L10
_L9:
        JVM INSTR pop ;
        if(s1 == null) goto _L11; else goto _L7
_L10:
        s1;
        equals();
        JVM INSTR ifeq 108;
           goto _L11 _L7
_L11:
        if(!mycaseclass.canEqual(this)) goto _L7; else goto _L12
_L12:
        if(true) goto _L2; else goto _L4
_L7:
        if(true) goto _L4; else goto _L2
_L2:
        true;
          goto _L13
_L4:
        false;
_L13:
        return;
    }

    public MyCaseClass(String name, String value)
    {
        this.name = name;
        this.value = value;
        super();
        scala.Product.class.$init$(this);
    }

    private final String name;
    private final String value;
}
